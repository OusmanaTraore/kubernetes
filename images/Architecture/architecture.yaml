apiVersion: v1
kind: Pod
metadata:
  name: jekyll
  namespace: development
  labels:
    run: jekyll
spec:
  containers:
  - name: jekyll
    image: kodekloud/jekyll-serve
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - name: copy-jekyll-site
    image: kodekloud/jekyll
    command: [ "jekyll", "new", "/site" ]
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site
# ---
# apiVersion: v1
# items:
# - apiVersion: v1
#   kind: PersistentVolume
#   metadata:
#     annotations:
#       kubectl.kubernetes.io/last-applied-configuration: |
#         {"apiVersion":"v1","kind":"PersistentVolume","metadata":{"annotations":{},"name":"jekyll-site"},"spec":{"accessModes":["ReadWriteMany"],"capacity":{"storage":"1Gi"},"local":{"path":"/site"},"nodeAffinity":{"required":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/hostname","operator":"In","values":["node01"]}]}]}},"persistentVolumeReclaimPolicy":"Delete","storageClassName":"local-storage","volumeMode":"Filesystem"}}
#     creationTimestamp: "2022-06-14T23:53:06Z"
#     finalizers:
#     - kubernetes.io/pv-protection
#     name: jekyll-site
#     resourceVersion: "2082"
#     uid: 43a1db69-3b0b-463a-afd1-b28ac029cef7
#   spec:
#     accessModes:
#     - ReadWriteMany
#     capacity:
#       storage: 1Gi
#     local:
#       path: /site
#     nodeAffinity:
#       required:
#         nodeSelectorTerms:
#         - matchExpressions:
#           - key: kubernetes.io/hostname
#             operator: In
#             values:
#             - node01
#     persistentVolumeReclaimPolicy: Delete
#     storageClassName: local-storage
#     volumeMode: Filesystem
#   status:
#     phase: Available
# kind: List
# metadata:
#   resourceVersion: ""
#   selfLink: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  volumeName: jekyll-site
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  selector:
    run: jekyll
  ports:
  - protocol: TCP
    nodePort: 30097
    port: 8080
    targetPort: 4000
  type: NodePort
status:
  loadBalancer: {}

